// <auto-generated />
using System;
using EntityFramework.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFramework.Migrations.Migrations
{
    [DbContext(typeof(MyPayDbContext))]
    partial class MyPayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("PayDotNet.Core.Models.PayCharge", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessorId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountCaptured")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AmountRefunded")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApplicationFeeAmount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discounts")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpirationMonth")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpirationYear")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last4")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaySubscriptionCustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaySubscriptionProcessorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentIntentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethodType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubscriptionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Subtotal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Tax")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId", "ProcessorId");

                    b.HasIndex("PaySubscriptionCustomerId", "PaySubscriptionProcessorId");

                    b.ToTable("PayCharge");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PayCustomer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Processor", "ProcessorId")
                        .IsUnique();

                    b.ToTable("PayCustomer");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PayMerchant", b =>
                {
                    b.Property<string>("ProcessorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnboardingComplete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("ProcessorId");

                    b.ToTable("PayMerchant");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PayPaymentMethod", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId", "ProcessorId");

                    b.ToTable("PayPaymentMethod");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PaySubscription", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessorId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ApplicationFeePercent")
                        .HasPrecision(8, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CurrentPeriodEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CurrentPeriodStart")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndsAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMetered")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PauseBehaviour")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PauseResumesAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PauseStartsAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessorPlan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TrailEndsAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId", "ProcessorId");

                    b.ToTable("PaySubscription");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PayWebhook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PayWebhook");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PayCharge", b =>
                {
                    b.HasOne("PayDotNet.Core.Models.PayCustomer", null)
                        .WithMany("Charges")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayDotNet.Core.Models.PaySubscription", null)
                        .WithMany("Charges")
                        .HasForeignKey("PaySubscriptionCustomerId", "PaySubscriptionProcessorId");

                    b.OwnsMany("PayDotNet.Core.Models.PayChargeTaxAmount", "TotalTaxAmounts", b1 =>
                        {
                            b1.Property<string>("PayChargeCustomerId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PayChargeProcessorId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Amount")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("PayChargeCustomerId", "PayChargeProcessorId", "Id");

                            b1.ToTable("PayCharge_TotalTaxAmounts");

                            b1.WithOwner()
                                .HasForeignKey("PayChargeCustomerId", "PayChargeProcessorId");
                        });

                    b.OwnsMany("PayDotNet.Core.Models.PayChargeLineItem", "LineItems", b1 =>
                        {
                            b1.Property<string>("PayChargeCustomerId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PayChargeProcessorId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Amount")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Discounts")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsProration")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("PeriodEnd")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("PeriodStart")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PriceId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("ProcessorId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Quantity")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("UnitAmount")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PayChargeCustomerId", "PayChargeProcessorId", "Id");

                            b1.ToTable("PayChargeLineItem");

                            b1.WithOwner()
                                .HasForeignKey("PayChargeCustomerId", "PayChargeProcessorId");

                            b1.OwnsMany("PayDotNet.Core.Models.PayChargeTaxAmount", "TaxAmounts", b2 =>
                                {
                                    b2.Property<string>("PayChargeLineItemPayChargeCustomerId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("PayChargeLineItemPayChargeProcessorId")
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("PayChargeLineItemId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("Amount")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("PayChargeLineItemPayChargeCustomerId", "PayChargeLineItemPayChargeProcessorId", "PayChargeLineItemId", "Id");

                                    b2.ToTable("PayChargeLineItem_TaxAmounts");

                                    b2.WithOwner()
                                        .HasForeignKey("PayChargeLineItemPayChargeCustomerId", "PayChargeLineItemPayChargeProcessorId", "PayChargeLineItemId");
                                });

                            b1.Navigation("TaxAmounts");
                        });

                    b.OwnsMany("PayDotNet.Core.Models.PayChargeRefund", "Refunds", b1 =>
                        {
                            b1.Property<string>("PayChargeCustomerId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PayChargeProcessorId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Amount")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("ProcessorId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Reason")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("PayChargeCustomerId", "PayChargeProcessorId", "Id");

                            b1.ToTable("PayChargeRefund");

                            b1.WithOwner()
                                .HasForeignKey("PayChargeCustomerId", "PayChargeProcessorId");
                        });

                    b.OwnsMany("PayDotNet.Core.Models.PayChargeTotalDiscount", "TotalDiscountAmounts", b1 =>
                        {
                            b1.Property<string>("PayChargeCustomerId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PayChargeProcessorId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Amount")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("DiscountId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("PayChargeCustomerId", "PayChargeProcessorId", "Id");

                            b1.ToTable("PayChargeTotalDiscount");

                            b1.WithOwner()
                                .HasForeignKey("PayChargeCustomerId", "PayChargeProcessorId");
                        });

                    b.Navigation("LineItems");

                    b.Navigation("Refunds");

                    b.Navigation("TotalDiscountAmounts");

                    b.Navigation("TotalTaxAmounts");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PayPaymentMethod", b =>
                {
                    b.HasOne("PayDotNet.Core.Models.PayCustomer", null)
                        .WithMany("PaymentMethods")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PaySubscription", b =>
                {
                    b.HasOne("PayDotNet.Core.Models.PayCustomer", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("PayDotNet.Core.Models.PaySubscriptionItem", "SubscriptionItems", b1 =>
                        {
                            b1.Property<string>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PaySubscriptionCustomerId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PaySubscriptionProcessorId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Quantity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("PaySubscriptionCustomerId", "PaySubscriptionProcessorId");

                            b1.ToTable("PaySubscriptionItem");

                            b1.WithOwner()
                                .HasForeignKey("PaySubscriptionCustomerId", "PaySubscriptionProcessorId");

                            b1.OwnsOne("PayDotNet.Core.Models.PaySubscriptionItemPrice", "Price", b2 =>
                                {
                                    b2.Property<string>("Id")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("Id");

                                    b2.ToTable("PaySubscriptionItem");

                                    b2.WithOwner()
                                        .HasForeignKey("Id");
                                });

                            b1.Navigation("Price")
                                .IsRequired();
                        });

                    b.Navigation("SubscriptionItems");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PayCustomer", b =>
                {
                    b.Navigation("Charges");

                    b.Navigation("PaymentMethods");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("PayDotNet.Core.Models.PaySubscription", b =>
                {
                    b.Navigation("Charges");
                });
#pragma warning restore 612, 618
        }
    }
}
